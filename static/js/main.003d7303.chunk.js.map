{"version":3,"sources":["routes/Cenas.js","routes/Animation.js","routes/Login.js","routes/Homepage.js","routes/Erro.js","routes/Menu.js","App.js","serviceWorker.js","index.js"],"names":["scenes","scene1","scene","THREE","camera","window","innerWidth","innerHeight","renderer","setSize","document","getElementById","appendChild","domElement","geometry","material","color","cube","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","scene2","onMouseWheel","event","preventDefault","deltaY","console","log","clampScalar","onWindowResize","aspect","updateProjectionMatrix","set","map","load","i","mesh","antialias","setPixelRatio","devicePixelRatio","setClearColor","addEventListener","init","Animation","id","Component","Login","props","state","email","password","auth","handleSubmit","bind","handleChange","handleChange1","e","target","this","setState","value","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","json","Error","responseJson","alert","catch","error","Container","className","Row","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Button","variant","to","Homepage","Erro","Alert","src","alt","Heading","Menu","Col","Dropdown","Toggle","Item","href","md","span","style","width","height","ResponsiveEmbed","aspectRatio","App","path","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.003d7303.chunk.js","sourcesContent":["import * as THREE from 'three';\r\n\r\nconst scenes = {\r\n    scene1() {\r\n        var scene = new THREE.Scene();\r\n        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n        var renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize(window.innerWidth - 200, window.innerHeight - 200);\r\n        document.getElementById('canvas').appendChild(renderer.domElement);\r\n        var geometry = new THREE.BoxGeometry(1, 1, 1);\r\n        var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        var cube = new THREE.Mesh(geometry, material);\r\n        scene.add(cube);\r\n        camera.position.z = 5;\r\n        var animate = function () {\r\n            requestAnimationFrame(animate);\r\n            cube.rotation.x += 0.01;\r\n            cube.rotation.y += 0.01;\r\n            renderer.render(scene, camera);\r\n        }\r\n\r\n        animate();\r\n    }, scene2() {\r\n        let camera, scene, renderer;\r\n\r\n        init();\r\n        animate();\r\n\r\n        function init() {\r\n            camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 10);\r\n            camera.position.set(0, 5, 2);\r\n\r\n            scene = new THREE.Scene();\r\n            \r\n\r\n            const geometry = new THREE.PlaneGeometry(.5, .5);\r\n            const material = new THREE.MeshBasicMaterial({ map: new THREE.TextureLoader().load('/mega-hack-3/loliWisky.jpg') });\r\n\r\n            // generate some boxes in a column\r\n\r\n            for (let i = 0; i <= 10; i++) {\r\n\r\n                const mesh = new THREE.Mesh(geometry, material);\r\n                mesh.position.y = i;\r\n                scene.add(mesh);\r\n\r\n            }\r\n\r\n            // instantiate a loader\r\n            // load a image resource\r\n            // var img = new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load( './textures/loliWisky.jpg' )});\r\n            // img.map.needsUpdate = true; //ADDED\r\n            // var plane = new THREE.Mesh(new THREE.PlaneGeometry(200, 200), img);\r\n            // plane.overdraw = true;\r\n            // scene.add(plane);\r\n\r\n            renderer = new THREE.WebGLRenderer({ antialias: true });\r\n            renderer.setPixelRatio(window.devicePixelRatio);\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n            document.getElementById('canvas').appendChild(renderer.domElement);\r\n            renderer.setClearColor(0x4169E1)\r\n            window.addEventListener('wheel', onMouseWheel, false);\r\n            window.addEventListener('resize', onWindowResize, false);\r\n\r\n        }\r\n\r\n        function animate() {\r\n\r\n            requestAnimationFrame(animate);\r\n            renderer.render(scene, camera);\r\n\r\n        }\r\n\r\n        function onMouseWheel(event) {\r\n\r\n            event.preventDefault();\r\n\r\n            \r\n            camera.position.y -= event.deltaY * 0.005;\r\n            console.log(camera.position.y );\r\n            // prevent scrolling beyond a min/max value\r\n\r\n            camera.position.clampScalar(0, 10);\r\n\r\n        }\r\n\r\n        function onWindowResize() {\r\n\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default scenes;","import React, { Component } from 'react';\r\nimport scenes from './Cenas';\r\n\r\nexport default class Animation extends Component {\r\n    componentDidMount() {\r\n        scenes.scene2();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id='webgl'></div>\r\n                <div id=\"canvas\" />\r\n                <div id=\"container\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Login.css';\r\nimport { Form, Button, Container, Row } from 'react-bootstrap';\r\n\r\n\r\nexport default class Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password:'',\r\n            auth:0\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChange1 = this.handleChange1.bind(this);\r\n    }\r\n\r\n\r\n    handleChange(e){\r\n        const target = e.target;\r\n        this.setState({email:target.value})\r\n\r\n    }\r\n\r\n    handleChange1(e){\r\n        const target = e.target;\r\n        this.setState({password:target.value})\r\n    }\r\n\r\n    \r\n    async handleSubmit(e){\r\n        \r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify({email:this.state.email,password:this.state.password})\r\n        }\r\n        \r\n        fetch('https://servercards.herokuapp.com/user-api/login', requestOptions).then((response) => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            } else {\r\n              throw new Error('Something went wrong');\r\n            }\r\n          })\r\n          .then((responseJson) => {\r\n            // Do something with the response\r\n            alert(responseJson)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          });\r\n        \r\n        // if (this.state.email === response.email && this.state.password === response.password){\r\n            alert(\"Logou\");\r\n        // }else{\r\n            alert(\"nao\");\r\n        // }\r\n        \r\n        e.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Container className=\"livro\">\r\n                <Row className=\"justify-content-center pequena\" >\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.email} onChange={this.handleChange} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Senha</Form.Label>\r\n                                <Form.Control type=\"password\" value={this.state.password} placeholder=\"Password\" onChange={this.handleChange1} />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Logar</Button>\r\n                        </Form>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Link to=\"/mega-hack-3/anima\">Pass</Link>\r\n                </Row>\r\n                \r\n                \r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Homepage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"#/login\">Login page</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Alert} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport default class Erro extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Alert variant=\"danger\" >\r\n                    <img src=\"/mega-hack-3/pandinha.gif\" alt=\"\"/>\r\n                <Alert.Heading>Opa Houve um Erro</Alert.Heading>\r\n                <p>\r\n                    Essa página Não existe.\r\n              </p>\r\n              <Link to=\"/mega-hack-3/\">Clique Aqui para voltar</Link>\r\n            </Alert>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col, Dropdown, ResponsiveEmbed } from 'react-bootstrap';\r\nimport \"./Menu.css\";\r\nexport default class Menu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\" livroa\" >\r\n                <img src=\"/mega-hack-3/livroaberto.png\" alt=\"\" />\r\n                <Row>\r\n                    <Col>\r\n                        <Dropdown>\r\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                                Menu e talz\r\n                        </Dropdown.Toggle>\r\n\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </Col>\r\n                    <Col md={{ span: 4 }}>\r\n                        <Row>\r\n                            <div style={{ width: 660, height: 'auto' }}>\r\n                                <ResponsiveEmbed aspectRatio=\"16by9\">\r\n                                    <embed type=\"image/svg+xml\" src=\"/mega-hack-3/loliWisky.jpg\" />\r\n                                </ResponsiveEmbed>\r\n                            </div>\r\n\r\n                        </Row>\r\n                        <Row>\r\n                            Cards dos livros 2\r\n                </Row>\r\n                        <Row>\r\n                            Cards dos livros 3\r\n                </Row>\r\n                        <Row>\r\n                            Cards dos livros 4\r\n                </Row>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container >\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Animation from './routes/Animation.js';\r\nimport Login from './routes/Login.js';\r\nimport Homepage from './routes/Homepage.js';\r\nimport Erro from './routes/Erro.js';\r\nimport Menu from './routes/Menu';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <Switch>\r\n            <Route path=\"/mega-hack-3/anima\">\r\n              <Animation />\r\n            </Route>\r\n            <Route path=\"/mega-hack-3/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path= '/mega-hack-3/menu'>\r\n              <Menu />\r\n            </Route>\r\n            <Route path= '/mega-hack-3'>\r\n              <Homepage />\r\n            </Route>\r\n            \r\n            <Route path= '/'>\r\n              <Erro />\r\n            </Route>\r\n            \r\n          </Switch>\r\n        </header>\r\n      </div>\r\n      </Router >\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}